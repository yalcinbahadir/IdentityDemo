@page "/register"
<h3>Register</h3>
<div></div>
<EditForm Model="@Model" OnValidSubmit="HandelValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label>Email</label>
        <InputText class="form-control" @bind-Value="Model.Email" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText class="form-control" @bind-Value="Model.Password" />
    </div>
    <div class="form-group">
        <label>Confirm Password</label>
        <InputText class="form-control" @bind-Value="Model.ConfirmPassword" />
    </div>
    <input type="submit" value="Register" class="btn btn-primary" />
</EditForm>

@code {

    public RegisterModel Model { get; set; } = new RegisterModel();
    [Inject]
    public UserManager<IdentityUser> UserManager { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    protected override void OnInitialized()
    {
        Model = new RegisterModel();
        base.OnInitialized();
    }


    private async Task HandelValidSubmit()
    {
        var existing = await UserManager.FindByNameAsync(Model.Email);
        if (existing ==null)
        {
            var user = new IdentityUser() { Email = Model.Email, UserName = Model.Email };

            var result = await UserManager.CreateAsync(user, Model.Password);
            if (result.Succeeded)
            {
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                //Error message
            }


        }
        else
        {
            //Error message
        }


    }

}